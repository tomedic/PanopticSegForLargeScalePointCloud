# @package models
PointGroup:
  class: PointGroup3heads.PointGroup3heads
  conv_type: "SPARSE"
  scorer_type: "unet"
  loss_weights:
    semantic: 1
    offset_norm_loss: 0.1
    offset_dir_loss: 0.1
    score_loss: 1
    embedding_loss: 1
  backbone:
    architecture: "unet"

  scorer_unet:
    class: minkowski.Minkowski_Model
    conv_type: "SPARSE"
    define_constants:
      in_feat: 96
    down_conv:
      module_name: ResNetDown
      dimension: 3
      down_conv_nn: [ [ in_feat, 2*in_feat ], [ 2*in_feat, 4*in_feat ] ]
      kernel_size: 3
      stride: 2
      N: 1
    up_conv:
      module_name: ResNetUp
      dimension: 3
      up_conv_nn:
        [ [ 4*in_feat, 2*in_feat ], [ 2*in_feat+ 2*in_feat, in_feat ] ]
      kernel_size: 3
      stride: 2
      N: 1
  scorer_encoder:
    class: minkowski.Minkowski_Model
    conv_type: "SPARSE"
    define_constants:
      in_feat: 96
    down_conv:
      module_name: ResNetDown
      dimension: 3
      down_conv_nn: [ [ in_feat, 2*in_feat ], [ 2*in_feat, 4*in_feat ] ]
      kernel_size: 3
      stride: 2
      N: 1
    innermost:
      module_name: GlobalBaseModule
      activation:
        name: LeakyReLU
        negative_slope: 0.2
      aggr: "max"
      nn: [ 4*in_feat, in_feat ]

  prepare_epoch: 120
  cluster_radius_search: 1.5 * ${data.grid_size}

  min_iou_threshold: 0.25
  max_iou_threshold: 0.75

  vizual_ratio: 0

PointGroup-PAPER:
  class: PointGroup3heads.PointGroup3heads
  conv_type: "SPARSE"
  scorer_type: "unet"

  use_score_net: True
  mask_supervise: False
  use_mask_filter_score_feature: False
  use_mask_filter_score_feature_start_epoch: 50
  mask_filter_score_feature_thre: 0.5

  cal_iou_based_on_mask: False
  cal_iou_based_on_mask_start_epoch: 50

  loss_weights:
    semantic: 1
    offset_norm_loss: 0.1
    offset_dir_loss: 0.1
    score_loss: 1
    mask_loss: 1
    embedding_loss: 1

  bandwidth: 0.6
  embed_dim: 5
  feat_size: 16
  backbone:
    architecture: "unet"
    config:
      class: minkowski.Minkowski_Model
      conv_type: "SPARSE"
      define_constants:
        in_feat: ${models.PointGroup-PAPER.feat_size}
      down_conv:
        module_name: ResNetDown
        dimension: 3
        down_conv_nn:
          [
            [ FEAT, in_feat ],
            [ in_feat, 2*in_feat ],
            [ 2*in_feat, 3*in_feat ],
            [ 3*in_feat, 4*in_feat ],
            [ 4*in_feat, 5*in_feat ],
            [ 5*in_feat, 6*in_feat ],
            [ 6*in_feat, 7*in_feat ],
          ]
        kernel_size: 3
        stride: [ 1, 2, 2, 2, 2, 2, 2 ]
        N: 2
      up_conv:
        module_name: ResNetUp
        dimension: 3
        up_conv_nn:
          [
            [ 7*in_feat, 6*in_feat ],
            [ 2*6*in_feat, 5*in_feat ],
            [ 2*5*in_feat, 4*in_feat ],
            [ 2*4*in_feat, 3*in_feat ],
            [ 2*3*in_feat, 2*in_feat ],
            [ 2*2*in_feat, in_feat ],
            [ 2*in_feat, in_feat ],
          ]
        kernel_size: 3
        stride: [ 2, 2, 2, 2, 2, 2, 1 ]
        N: 2

  scorer_unet:
    class: minkowski.Minkowski_Model
    conv_type: "SPARSE"
    define_constants:
      in_feat: ${models.PointGroup-PAPER.feat_size}
    down_conv:
      module_name: ResNetDown
      dimension: 3
      down_conv_nn: [ [ in_feat, 2*in_feat ], [ 2*in_feat, 4*in_feat ] ]
      kernel_size: 3
      stride: 2
      N: 2
    up_conv:
      module_name: ResNetUp
      dimension: 3
      up_conv_nn: [ [ 4*in_feat, 2*in_feat ], [ 4*in_feat, in_feat ] ]
      kernel_size: 3
      stride: 2
      N: 2
  scorer_encoder:
    class: minkowski.Minkowski_Model
    conv_type: "SPARSE"
    define_constants:
      in_feat: ${models.PointGroup-PAPER.feat_size}
    down_conv:
      module_name: ResNetDown
      dimension: 3
      down_conv_nn: [ [ in_feat, 2*in_feat ], [ 2*in_feat, 4*in_feat ] ]
      kernel_size: 3
      stride: 2
      N: 2
    innermost:
      module_name: GlobalBaseModule
      activation:
        name: LeakyReLU
        negative_slope: 0.2
      aggr: "max"
      nn: [ 4*in_feat, in_feat ]

  prepare_epoch: 30
  cluster_radius_search: 1.5 * ${data.grid_size}

  min_iou_threshold: 0.25
  max_iou_threshold: 0.75

  cluster_type: 6
  vizual_ratio: 0
